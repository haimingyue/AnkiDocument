user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;   # 提供 html/css/js 等全部类型
  default_type  text/plain;              # 兜底 text/plain，避免异常时直接下载
  sendfile      on;
  server_tokens off;

  # 80：统一跳转到 HTTPS（可按需把目标域名定为 www）
  server {
    listen 80;
    server_name tlpy8.com www.tlpy8.com;
    return 301 https://tlpy8.com$request_uri;
  }

  # 443：正式站点（保留你现有的全部 location）
  server {
    listen 443 ssl http2;
    server_name tlpy8.com www.tlpy8.com;

    # 使用你刚签发的证书（已在宿主机 /etc/letsencrypt）
    ssl_certificate     /etc/letsencrypt/live/tlpy8.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tlpy8.com/privkey.pem;

    # 简洁可靠的 TLS 设置
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    root  /usr/share/nginx/html;
    index index.html;

    # # 把 /AnkiDocument/ 映射到 dist 根目录
    # location /AnkiDocument/ {
    #   alias /usr/share/nginx/html/;     # 末尾的 / 非常重要
    #   try_files $uri $uri/ =404;
    # }

    # # 为 /AnkiDocument/assets/ 开启长缓存
    # location /AnkiDocument/assets/ {
    #   alias /usr/share/nginx/html/assets/;
    #   try_files $uri =404;
    #   access_log off;
    #   expires 1y;
    #   add_header Cache-Control "public, max-age=31536000, immutable";
    # }

    # 仅按文件直出（VitePress 预渲染，没必要做 SPA 回退）
    location /assets/ {
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location / {
      try_files $uri $uri/ =404;
    }

    # HTML 禁缓存，避免旧 index.html 指向旧 hash
    location ~* \.html$ {
      add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
  }
}
